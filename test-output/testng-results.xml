<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-19T20:41:09 IST" name="Default suite" finished-at="2023-04-19T20:41:09 IST" duration-ms="50">
    <groups>
    </groups>
    <test started-at="2023-04-19T20:41:09 IST" name="Default test" finished-at="2023-04-19T20:41:09 IST" duration-ms="50">
      <class name="Practice.DemoTest">
        <test-method is-config="true" signature="BS()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="BS" finished-at="2023-04-19T20:41:09 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BS -->
        <test-method is-config="true" signature="BT()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="BT" finished-at="2023-04-19T20:41:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method is-config="true" signature="BC()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="BC" finished-at="2023-04-19T20:41:09 IST" duration-ms="1" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[.\src\test\resources\PropertyFileData.properties (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: .\src\test\resources\PropertyFileData.properties (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:112)
at Generic_Utility.Property_Utility.getKeyValue(Property_Utility.java:18)
at Generic_Utility.Baseclass.BC(Baseclass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="BM" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1681917069652" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="method()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="method" finished-at="2023-04-19T20:41:09 IST" duration-ms="0" status="SKIP">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[.\src\test\resources\PropertyFileData.properties (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: .\src\test\resources\PropertyFileData.properties (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:112)
at Generic_Utility.Property_Utility.getKeyValue(Property_Utility.java:18)
at Generic_Utility.Baseclass.BC(Baseclass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="AM" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1681917069661" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="AC" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1681917069663" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method is-config="true" signature="AT()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="AT" finished-at="2023-04-19T20:41:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method is-config="true" signature="AS()[pri:0, instance:Practice.DemoTest@a38c7fe]" started-at="2023-04-19T20:41:09 IST" name="AS" finished-at="2023-04-19T20:41:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- Practice.DemoTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
